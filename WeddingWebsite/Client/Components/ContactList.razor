@using MudBlazor
@using WeddingWebsite.Components.Containers
@using WeddingWebsite.Core
@using WeddingWebsite.Models.People
@using WeddingWebsite.Models.WebsiteConfig

@inject IWebsiteConfig Config

<h2>What is your enquiry about?</h2>
<p>This will affect who you should contact.</p>
<MudSelect @bind-Value="ContactReason" Label="Category of Enquiry" Variant="Variant.Outlined" Required="true">
    @foreach (var reason in Config.ContactReasonsToShow) {
        <MudSelectItem Value="reason">@reason.GetEnumDescription()</MudSelectItem>
    }
</MudSelect>

<h2>Is it urgent?</h2>
<MudToggleGroup @bind-Value="Urgency">
    <MudToggleItem Value="@ContactUrgency.Urgent">Yes</MudToggleItem>
    <MudToggleItem Value="@ContactUrgency.NotUrgent">No</MudToggleItem>
</MudToggleGroup>
<p>@ResponseTimelineString</p>

<h2>Suggested contacts</h2>
@foreach (var contact in MatchingContacts) {
    <RoundedCornerBox>
        <h3>@contact.NameAndRole</h3>
        @foreach (var method in contact.ContactDetails.GetOptions(Urgency).Methods) {
            @if (method.Link != null) {
                <p>@method.Type: <a href="@method.Link" target="_blank" rel="noopener noreferrer">@method.Text</a></p>
            } else {
                <p>@method.Type: @method.Text</p>
            }
        }
    </RoundedCornerBox>
}

@code {
    [Parameter]
    public required IEnumerable<IContact> Contacts { get; set; }
    
    private ContactReason ContactReason { get; set; }

    private ContactUrgency Urgency { get; set; }
    
    private string ResponseTimelineString => Urgency == ContactUrgency.Urgent ? "We'll get back to you as soon as possible." : "We'll get back to you within 48 hours.";
    
    private IEnumerable<IContact> MatchingContacts => Contacts
        .Where(c => c.ContactDetails.GetOptions(Urgency).MatchesReason(ContactReason));

}