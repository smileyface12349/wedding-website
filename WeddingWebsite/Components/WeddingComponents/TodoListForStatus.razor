@using WeddingWebsite.Core
@using WeddingWebsite.Components.Containers
@using WeddingWebsite.Models.Todo

<h2>@Name</h2>
<p>@Description</p>
@foreach (var items in GroupedTodoItems.Where(group => group.FirstOrDefault()?.Status == Status))
{
    <Box CustomCss="margin-bottom: 10px">
        @if (items.GetGroup()?.Name != null)
        {
            <h3>@items.GetGroup().Name</h3>
        }
        @foreach (var item in items)
        {
            <TodoListItem Item="item" ParentStateHasChanged="ParentStateHasChanged" />
        }
    </Box>
}

@code {
    [Parameter]
    public TodoItemStatus Status { get; set; }
    
    [Parameter]
    public IEnumerable<IEnumerable<TodoItem>> GroupedTodoItems { get; set; } = [];
    
    [Parameter]
    public Action? ParentStateHasChanged { get; set; }

    private string Name => Status switch
    {
        TodoItemStatus.ActionRequired => "Action Required",
        TodoItemStatus.Waiting => "Waiting",
        TodoItemStatus.Completed => "Completed",
        _ => "Unknown Status"
    };

    private string Description => Status switch
    {
        TodoItemStatus.ActionRequired => "These items are ready to make progress now.",
        TodoItemStatus.Waiting => "These items are waiting for action from other people. Items will automatically be moved back to Action Required after 3 days, at which point you will need to mark it as still waiting.",
        TodoItemStatus.Completed => "These items are done, and no further action is required.",
        _ => "No description available for this status."
    };
}