@page "/Todo"
@using WeddingWebsite.Components.Layouts
@using WeddingWebsite.Components.Sections
@using WeddingWebsite.Components.WeddingComponents
@using WeddingWebsite.Components.Elements
@using WeddingWebsite.Models.Todo
@using WeddingWebsite.Services

@layout SimpleLayout

@attribute [Authorize(Roles = "Admin")]

@inject ITodoService TodoService

<Section Center="true">
    <h1>Todo List</h1>
    <p class="description">A handy little to-do list that's built-in to the website. It's nothing special, but it might help to keep track of what needs doing in one place, without having to use another service.</p>
    
     <Button OnClick="AddNewItem" AddBottomMargin="true">Add New Item</Button>
    
    @foreach (var status in Enum.GetValues<TodoItemStatus>())
    {
        <TodoListForStatus Status="status" GroupedTodoItems="GroupedTodoItems" ParentStateHasChanged="RefreshState"/>
    }
    
</Section>

@code {
    private IEnumerable<IEnumerable<TodoItem>> GroupedTodoItems { get; set; } = [];
    
    protected override void OnInitialized()
    {
        GroupedTodoItems = TodoService.GetGroupedTodoItems();
    }

    private void RefreshState()
    {
        GroupedTodoItems = TodoService.GetGroupedTodoItems();
        StateHasChanged();
    }

    private void AddNewItem()
    {
        TodoService.AddNewItem();
        RefreshState();
    }
}
