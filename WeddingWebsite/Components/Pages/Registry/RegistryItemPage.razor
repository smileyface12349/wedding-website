@page "/Registry/{ItemId}"
@using WeddingWebsite.Components.Containers
@using WeddingWebsite.Components.Elements
@using WeddingWebsite.Components.Sections
@using WeddingWebsite.Models.Registry
@using WeddingWebsite.Services

@inject IRegistryService RegistryService

@if (Item == null)
{
    <div class="not-found">
        <p>Sorry, that item could not be found.</p>
        <LinkButton Data=@(new Models.WebsiteElement.LinkButton("Back to Registry", "/registry"))/>
    </div>
    return;
}

<div style="margin-bottom: 100px"></div>
<Section>
    <SideBySide HalfSpacing="10px">
        <LeftContent>
            <img src="@Item.ImageUrl" alt=""/>
        </LeftContent>
        <RightContent>
            <h1>@Item.Name</h1>
            <p class="description">@Item.Description</p>
            @if (Item.MaxQuantity != 1)
            {
                <p>Quantity Claimed: @Item.QuantityClaimed/@Item.MaxQuantity.</p>
            }
            <h2>Purchase Options</h2>
            @foreach (var method in Item.PurchaseMethods)
            {
                <a href="@method.Url" target="_blank" rel="noopener noreferrer" class="purchase-option">
                    <Box>
                        <div class="purchase-option-content">
                            <p class="purchase-option-name">@method.Name</p>
                            <MudSpacer/>
                            <p class="purchase-option-cost">£@method.Cost.ToString("0.00")</p>
                            @if (method.DeliveryCost > 0)
                            {
                                <p class="purchase-option-delivery-cost">+£@method.DeliveryCost.ToString("0.00") delivery</p>
                            }
                            @if (method.Url != null)
                            {
                                <Button>View</Button>
                            }
                        </div>
                    </Box>
                </a>
            }
            <p>Please do not purchase anything before claiming the item (see below) - this will reserve it so we don't get two people buying the same thing!</p>
        </RightContent>
    </SideBySide>
</Section>


@code {
    [Parameter]
    public required string ItemId { get; set; }
    
    private RegistryItem? Item { get; set; }

    protected override void OnInitialized() 
    {
        Item = RegistryService.GetRegistryItemById(ItemId);
    }
}
