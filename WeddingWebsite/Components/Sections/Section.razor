@using WeddingWebsite.Models.Theme
@using WeddingWebsite.Models.WebsiteConfig
@using WeddingWebsite.Components.Sections.Backgrounds

@if (BackgroundHasPureCssImplementation)
{
    <section id="@Id" class="@(Padding ? "with-padding" : "")" style="@CssBackground;@CssColorAttribute">
        <div class="section-content @(Center ? "centered" : "")">
            @ChildContent
        </div>
    </section>
}
else
{
    <AdvancedBackground Background="AdvancedBackground">
        <section id="@Id" class="@(Padding ? "with-padding" : "")" style="@CssColorAttribute">
            <div class="section-content @(Center ? "centered" : "")">
                @ChildContent
            </div>
        </section>
    </AdvancedBackground>
}


@code {

    [Parameter]
    public required RenderFragment ChildContent { get; set; }
    
    [Parameter]
    public bool Center { get; set; } = false;
    
    [Parameter]
    public bool Padding { get; set; } = true;
    
    [Parameter]
    public string Id { get; set; } = "";
    
    [CascadingParameter]
    public SectionTheme? Theme { get; set; }
    
    private string CssBackground => Theme?.Background.GetBackgroundCss() ?? Background;
    private string CssColorAttribute => Theme is { Background.IsDark: true } ? "color: white;" : "";
    private bool BackgroundHasPureCssImplementation => Theme == null || Theme.Background.HasPureCssImplementation;
    private IBackground? AdvancedBackground => Theme?.Background;
    
    /// <summary>
    /// Default background - overridden by theme
    /// </summary>
    [Parameter]
    public string Background { get; set; } = "transparent";
}