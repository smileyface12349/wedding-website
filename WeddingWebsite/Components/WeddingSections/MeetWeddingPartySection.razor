@using WeddingWebsite.Models.WebsiteConfig
@using WeddingWebsite.Models.WeddingDetails
@using WeddingWebsite.Components.Sections
@using WeddingWebsite.Components.Containers
@using WeddingWebsite.Components.WeddingComponents
@using WeddingWebsite.Models.People

@inject IWeddingDetails WeddingDetails

<Section Center="true">
    <SectionHeading>Meet the Wedding Party</SectionHeading>
    @if (DisplayMode is MeetWeddingPartyDisplay.Chat)
    {
        <SideBySide>
            <LeftContent>
                <MeetWeddingPartyPeople
                    DisplayMode="DisplayMode"
                    People="@WeddingDetails.NotablePeople.Where(p => RolesLeft.Contains(p.Role))"
                    IsOnLeftSide="true"/>
            </LeftContent>
            <RightContent>
                <MeetWeddingPartyPeople
                    DisplayMode="DisplayMode"
                    People="@WeddingDetails.NotablePeople.Where(p => RolesRight.Contains(p.Role))"
                    IsOnLeftSide="false"/>
            </RightContent>
        </SideBySide>
    } else if (DisplayMode is MeetWeddingPartyDisplay.TwoRows)
    {
        <div class="grid two-rows">
            <MeetWeddingPartyPeople
                DisplayMode="DisplayMode"
                People="@WeddingDetails.NotablePeople.Where(p => RolesLeft.Contains(p.Role))"
                IsOnLeftSide="true"/>
        </div>

        <div class="grid two-rows">
            <MeetWeddingPartyPeople
                DisplayMode="DisplayMode"
                People="@WeddingDetails.NotablePeople.Where(p => RolesRight.Contains(p.Role))"
                IsOnLeftSide="false"/>
        </div>
    } 
    else if (DisplayMode is MeetWeddingPartyDisplay.Grid or MeetWeddingPartyDisplay.TwoColumns)
    {
        <div class="grid @(DisplayMode == MeetWeddingPartyDisplay.TwoColumns ? "two-columns" : "")">
            <MeetWeddingPartyPeople
                DisplayMode="DisplayMode"
                People="@WeddingDetails.NotablePeople.Where(p => RolesLeft.Contains(p.Role) || RolesRight.Contains(p.Role))"
                IsOnLeftSide="true"/>
        </div>
    } else {
        <p>Invalid display mode: @DisplayMode.</p>
    }
</Section>


@code {

    [Parameter]
    public required MeetWeddingPartyDisplay DisplayMode { get; set; }
    
    [Parameter]
    public required IEnumerable<Role> RolesLeft { get; set; }
    
    [Parameter]
    public required IEnumerable<Role> RolesRight { get; set; }
    
}
